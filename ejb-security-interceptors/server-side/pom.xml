<?xml version="1.0"?>
<!-- JBoss, Home of Professional Open Source Copyright 2013, Red Hat, Inc. 
	and/or its affiliates, and individual contributors by the @authors tag. See 
	the copyright.txt in the distribution for a full listing of individual contributors. 
	Licensed under the Apache License, Version 2.0 (the "License"); you may not 
	use this file except in compliance with the License. You may obtain a copy 
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jboss.as.quickstarts</groupId>
    <artifactId>jboss-as-ejb-security-interceptors-server-side</artifactId>
    <version>7.1.2-SNAPSHOT</version>
    <packaging>ejb</packaging>
    <name>JBoss AS Quickstarts: EJB Security Interceptors (server side artifact)</name>
    <description>JBoss AS Quickstarts: Server side infrastructure for EJB Security Interceptors</description>

    <url>http://jboss.org/jbossas</url>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following
              message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
              resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->
        <version.org.jboss.as>7.2.0.Alpha1-SNAPSHOT</version.org.jboss.as>
        <version.org.jboss.as.plugins.maven.plugin>7.3.Final</version.org.jboss.as.plugins.maven.plugin>
        <version.org.jboss.spec.jboss.javaee.6.0>3.0.0.Final</version.org.jboss.spec.jboss.javaee.6.0>

        <!-- other plugin versions -->
        <version.compiler.plugin>2.3.1</version.compiler.plugin>
        <version.exec.plugin>1.2.1</version.exec.plugin>
        <version.ejb.plugin>2.3</version.ejb.plugin>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.6</maven.compiler.target>
        <maven.compiler.source>1.6</maven.compiler.source>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Define the version of JBoss' Java EE 6 APIs we want to use -->
            <!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill
                   of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
                   of artifacts. We use this here so that we always get the correct versions
                   of artifacts. Here we use the jboss-javaee-6.0 stack (you can read this as
                   the JBoss stack of the Java EE 6 APIs). You can actually use this stack with
                   any version of JBoss AS that implements Java EE 6, not just JBoss AS 7! -->
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-6.0</artifactId>
                <version>${version.org.jboss.spec.jboss.javaee.6.0}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.as</groupId>
                <artifactId>jboss-as-ejb-client-bom</artifactId>
                <version>${version.org.jboss.as}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- We use certain AS7 specific security construct in our server side container interceptor -->
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-security</artifactId>
        </dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided scope
              as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- We use JBoss EJB3 specific APIs like @SecurityDomain annotation. We however mark the dependency as provided
              since it's already shipped in AS distribution -->
        <dependency>
            <groupId>org.jboss.ejb3</groupId>
            <artifactId>jboss-ejb3-ext-api</artifactId>
            <scope>provided</scope>
        </dependency>


    </dependencies>

    <build>
        <!-- Set the name of the deployable -->
        <finalName>jboss-as-ejb-security-interceptors</finalName>
        <plugins>
            <!-- JBoss AS plugin to deploy the application -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.org.jboss.as.plugins.maven.plugin}</version>
                <configuration>
                    <filename>${project.build.finalName}.jar</filename>
                </configuration>
            </plugin>
            <!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation
                   processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- We generate a jar with the EJB remote interfaces -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ejb-plugin</artifactId>
                <version>${version.ejb.plugin}</version>
                <configuration>
                    <ejbVersion>3.1</ejbVersion>
                    <!-- this is false by default -->
                    <generateClient>true</generateClient>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
